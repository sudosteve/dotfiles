#!/bin/sh

# Prints the current volume or ðŸ”‡ if muted. Uses PulseAudio by default,

sink="$(pactl get-default-sink)"
while [[ "$sink" == "@DEFAULT_SINK@" || "$sink" == "auto_null" ]]
do
    sleep 0.1
    sink="$(pactl get-default-sink)"
done

case $BLOCK_BUTTON in
    # 1) setsid "$TERMINAL" -e pulsemixer & ;;
    1) audio-select ;;
    2) pactl set-sink-mute $sink toggle ;;
    4) pactl set-sink-volume $sink +5%;;
    5) pactl set-sink-volume $sink -5%;;
    3) pactl set-default-sink $([ $sink == $SPEAKERS ] && echo $HEADPHONES || echo $SPEAKERS )
#    3) notify-send "ðŸ“¢ Volume module" "\- Shows volume ðŸ”Š, ðŸ”‡ if muted.
#- Middle click to mute.
#- Scroll to change."
esac

sink="$(pactl get-default-sink)"

# If muted, print mute symbol and exit now
pactl get-sink-mute $sink | grep -q "yes" && printf "ðŸ”‡\\n" && exit

vol="$(pactl get-sink-volume $sink | grep '[0-9]\+%' | sed "s,.* \([0-9]\+\)%.*,\1,;1q")"

if [ $sink == $HEADPHONES ]; then
    icon="ðŸŽ§"
elif [ "$vol" -gt "70" ]; then
    icon="ðŸ”Š"
elif [ "$vol" -lt "30" ]; then
    icon="ðŸ”ˆ"
else
    icon="ðŸ”‰"
fi

printf "%s %s%%\\n" "$icon" "$vol"
